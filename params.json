{"body":"DICE is an open source monitoring system for global invariants running on\r\nresource-constrained networked embedded systems developed by Stefan Guna.\r\n\r\nDICE provides a simple, declarative language to express the invariants to be\r\nmonitored. The network is tasked as a whole and together monitor invariants\r\nsuch as:\r\n    forall m, n: temp@m - temp@n < 10\r\n    forall m, n: temp@m > 25 -> fan_active@n = TRUE\r\nwhere temp@m references the temperature at node m. The invariant building blocks\r\nare local node state (e.g., NODE_ATTRIBUTE@quantifier) that are combined to form\r\nglobal predicates expressed at network level.\r\n\r\nTo get started:\r\n1. Edit ../../tools/dice-compiler/attributes.att and declare node attributes.\r\n2. Edit ../../tools/dice-compiler/constraints.dc to decalare the invariant to be\r\nmonitored.\r\n3. Build the compiler, i.e., mvn compile.\r\n4. Run the eu.guna.dice.DiceCompiler on the two files.\r\n5. Edit attributes_data.c to insert the code handling attribute values. Have a\r\nlook at attributes.h to identify the code you need to write.\r\n6. TODO Add violation handling code.\r\n7. Compile and run!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Port of the DICE system on the Contiki operating system","name":"Contiki-DICE"}